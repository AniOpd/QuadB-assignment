import { createSlice, nanoid } from "@reduxjs/toolkit";
// nonoid is a function that generates a unique ID for each todo item

const initialState = {
    todos: [{id: 1, text: 'Add Your Tasks Here!',completed: false, done: 'Not Done'}]
}

// createSlice function from redux toolkit takes an object with the name of the slice, the initial state, and an object with reducer functions
// The reducer functions are used to update the state based on the action type
// The createSlice function returns an object with the reducer functions and the initial state
export const todoSlice = createSlice({
    name: 'todo',
    initialState,
    reducers: {
        // Reducer funtions to add and remove todos
        addTodo: (state,action) => {
            // create a new todo object with the id generated by nanoid and the text from the action payload
            const todo={
                id: nanoid(),
                text: action.payload
            }
            state.todos.push(todo)
        },
        deleteTodo: (state,action) => {
            // filter out the todo item with the id that matches the payload
            state.todos = state.todos.filter(todo => todo.id !== action.payload)
        },
        toggleTodo: (state, action) => {
            // find the todo item with the id that matches the payload
            const todo = state.todos.find(todo => todo.id === action.payload)
            // toggle the completed property of the todo item
            if(todo){
                todo.completed = !todo.completed
            }
        }
    }
})

// Export the reducer functions as actions to be used in the components
export const { addTodo, deleteTodo, toggleTodo } = todoSlice.actions
// Export the reducer function to be used in the store
export default todoSlice.reducer